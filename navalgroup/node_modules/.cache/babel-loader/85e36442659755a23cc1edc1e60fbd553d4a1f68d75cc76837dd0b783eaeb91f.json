{"ast":null,"code":"var _jsxFileName = \"/home/gabrielgonta/navalgroup/src/Mobile.js\";\nimport React from 'react';\n\n// Fonction pour créer les mobiles sous formes graphiques selon leur forme et couleur\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Mobile = /*#__PURE__*/React.memo(_c = ({\n  shape,\n  color,\n  xM,\n  yM,\n  headingRad,\n  orientationRad,\n  onClick,\n  isSelected\n}) => {\n  let fillColor = 'black';\n  let strokeColor = 'black';\n  let strokeWidth = {\n    isSelected\n  };\n  switch (color) {\n    case 'RED':\n      fillColor = 'red';\n      break;\n    case 'YELLOW':\n      fillColor = 'yellow';\n      break;\n    case 'ORANGE':\n      fillColor = 'orange';\n      break;\n    case 'GREEN':\n      fillColor = 'green';\n      break;\n    case 'BLUE':\n      fillColor = 'blue';\n      break;\n    case 'VIOLET':\n      fillColor = 'violet';\n      break;\n    default:\n      fillColor = 'black';\n  }\n  let x = (xM + 10000) / 20000 * 500;\n  let y = 500 - (yM + 10000) / 20000 * 500;\n  let shapeElement;\n  switch (shape) {\n    case 'SQUARE':\n      shapeElement = /*#__PURE__*/_jsxDEV(\"rect\", {\n        x: x - 5,\n        y: y - 5,\n        width: \"10\",\n        height: \"10\",\n        fill: fillColor,\n        stroke: strokeColor,\n        strokeWidth: strokeWidth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 22\n      }, this);\n      break;\n    case 'CIRCLE':\n      shapeElement = /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: x,\n        cy: y,\n        r: \"5\",\n        fill: fillColor,\n        stroke: strokeColor,\n        strokeWidth: strokeWidth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 22\n      }, this);\n      break;\n    case 'TRIANGLE':\n      shapeElement = /*#__PURE__*/_jsxDEV(\"polygon\", {\n        points: `${x},${y - 5} ${x + 5},${y + 5} ${x - 5},${y + 5}`,\n        fill: fillColor,\n        stroke: strokeColor,\n        strokeWidth: strokeWidth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 22\n      }, this);\n      break;\n    case 'DIAMOND':\n      shapeElement = /*#__PURE__*/_jsxDEV(\"polygon\", {\n        points: `${x},${y - 5} ${x + 5},${y} ${x},${y + 5} ${x - 5},${y}`,\n        fill: fillColor,\n        stroke: strokeColor,\n        strokeWidth: strokeWidth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 22\n      }, this);\n      break;\n    default:\n      shapeElement = null;\n  }\n  const adjustedOrientationRad = orientationRad - Math.PI / 2;\n  const orientationVector = /*#__PURE__*/_jsxDEV(\"line\", {\n    x1: x,\n    y1: y,\n    x2: x + Math.cos(adjustedOrientationRad) * 10,\n    y2: y + Math.sin(adjustedOrientationRad) * 10,\n    stroke: \"black\",\n    strokeWidth: strokeWidth\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n  const adjustedHeadingRad = headingRad - Math.PI / 2;\n  const headingVector = /*#__PURE__*/_jsxDEV(\"line\", {\n    x1: x,\n    y1: y,\n    x2: x + Math.cos(adjustedHeadingRad) * 10,\n    y2: y + Math.sin(adjustedHeadingRad) * 10,\n    stroke: \"black\",\n    strokeWidth: \"2\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    onClick: onClick,\n    children: [headingVector, orientationVector, shapeElement, isSelected && /*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: x,\n      cy: y,\n      r: \"12\",\n      fill: \"none\",\n      stroke: \"black\",\n      strokeWidth: \"2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n});\n_c2 = Mobile;\nexport default Mobile;\nvar _c, _c2;\n$RefreshReg$(_c, \"Mobile$React.memo\");\n$RefreshReg$(_c2, \"Mobile\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Mobile","memo","_c","shape","color","xM","yM","headingRad","orientationRad","onClick","isSelected","fillColor","strokeColor","strokeWidth","x","y","shapeElement","width","height","fill","stroke","fileName","_jsxFileName","lineNumber","columnNumber","cx","cy","r","points","adjustedOrientationRad","Math","PI","orientationVector","x1","y1","x2","cos","y2","sin","adjustedHeadingRad","headingVector","children","_c2","$RefreshReg$"],"sources":["/home/gabrielgonta/navalgroup/src/Mobile.js"],"sourcesContent":["import React from 'react';\n\n// Fonction pour créer les mobiles sous formes graphiques selon leur forme et couleur\nconst Mobile = React.memo(({ shape, color, xM, yM, headingRad, orientationRad, onClick, isSelected }) => {\n    let fillColor = 'black';\n    let strokeColor = 'black';\n    let strokeWidth = {isSelected}\n\n  switch (color) {\n    case 'RED':\n      fillColor = 'red';\n      break;\n    case 'YELLOW':\n      fillColor = 'yellow';\n      break;\n    case 'ORANGE':\n      fillColor = 'orange';\n      break;\n    case 'GREEN':\n      fillColor = 'green';\n      break;\n    case 'BLUE':\n      fillColor = 'blue';\n      break;\n    case 'VIOLET':\n      fillColor = 'violet';\n      break;\n    default:\n      fillColor = 'black';\n  }\n\n  let x = (xM + 10000) / 20000 * 500;\n  let y = 500 - (yM + 10000) / 20000 * 500;\n\n  let shapeElement;\n  switch (shape) {\n    case 'SQUARE':\n      shapeElement = <rect x={x - 5} y={y - 5} width=\"10\" height=\"10\" fill={fillColor} stroke={strokeColor} strokeWidth={strokeWidth} />;\n      break;\n    case 'CIRCLE':\n      shapeElement = <circle cx={x} cy={y} r=\"5\" fill={fillColor} stroke={strokeColor} strokeWidth={strokeWidth} />;\n      break;\n    case 'TRIANGLE':\n      shapeElement = <polygon points={`${x},${y - 5} ${x + 5},${y + 5} ${x - 5},${y + 5}`} fill={fillColor} stroke={strokeColor} strokeWidth={strokeWidth} />;\n      break;\n    case 'DIAMOND':\n      shapeElement = <polygon points={`${x},${y - 5} ${x + 5},${y} ${x},${y + 5} ${x - 5},${y}`} fill={fillColor} stroke={strokeColor} strokeWidth={strokeWidth} />;\n      break;\n    default:\n      shapeElement = null;\n  }\n\n  const adjustedOrientationRad = orientationRad - Math.PI / 2;\n  const orientationVector = (\n    <line\n      x1={x}\n      y1={y}\n      x2={x + Math.cos(adjustedOrientationRad) * 10}\n      y2={y + Math.sin(adjustedOrientationRad) * 10}\n      stroke=\"black\"\n      strokeWidth={strokeWidth}\n    />\n  );\n\n  const adjustedHeadingRad = headingRad - Math.PI / 2;\n\n  const headingVector = (\n    <line\n      x1={x}\n      y1={y}\n      x2={x + Math.cos(adjustedHeadingRad) * 10}\n      y2={y + Math.sin(adjustedHeadingRad) * 10}\n      stroke=\"black\"\n      strokeWidth=\"2\"\n    />\n  );\n\n  return (\n    <g onClick={onClick}>\n      {headingVector}\n      {orientationVector}\n      {shapeElement}\n      {isSelected && <circle cx={x} cy={y} r=\"12\" fill=\"none\" stroke=\"black\" strokeWidth=\"2\" />}\n    </g>\n  );\n});\n\nexport default Mobile;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,gBAAGH,KAAK,CAACI,IAAI,CAAAC,EAAA,GAACA,CAAC;EAAEC,KAAK;EAAEC,KAAK;EAAEC,EAAE;EAAEC,EAAE;EAAEC,UAAU;EAAEC,cAAc;EAAEC,OAAO;EAAEC;AAAW,CAAC,KAAK;EACrG,IAAIC,SAAS,GAAG,OAAO;EACvB,IAAIC,WAAW,GAAG,OAAO;EACzB,IAAIC,WAAW,GAAG;IAACH;EAAU,CAAC;EAEhC,QAAQN,KAAK;IACX,KAAK,KAAK;MACRO,SAAS,GAAG,KAAK;MACjB;IACF,KAAK,QAAQ;MACXA,SAAS,GAAG,QAAQ;MACpB;IACF,KAAK,QAAQ;MACXA,SAAS,GAAG,QAAQ;MACpB;IACF,KAAK,OAAO;MACVA,SAAS,GAAG,OAAO;MACnB;IACF,KAAK,MAAM;MACTA,SAAS,GAAG,MAAM;MAClB;IACF,KAAK,QAAQ;MACXA,SAAS,GAAG,QAAQ;MACpB;IACF;MACEA,SAAS,GAAG,OAAO;EACvB;EAEA,IAAIG,CAAC,GAAG,CAACT,EAAE,GAAG,KAAK,IAAI,KAAK,GAAG,GAAG;EAClC,IAAIU,CAAC,GAAG,GAAG,GAAG,CAACT,EAAE,GAAG,KAAK,IAAI,KAAK,GAAG,GAAG;EAExC,IAAIU,YAAY;EAChB,QAAQb,KAAK;IACX,KAAK,QAAQ;MACXa,YAAY,gBAAGjB,OAAA;QAAMe,CAAC,EAAEA,CAAC,GAAG,CAAE;QAACC,CAAC,EAAEA,CAAC,GAAG,CAAE;QAACE,KAAK,EAAC,IAAI;QAACC,MAAM,EAAC,IAAI;QAACC,IAAI,EAAER,SAAU;QAACS,MAAM,EAAER,WAAY;QAACC,WAAW,EAAEA;MAAY;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MAClI;IACF,KAAK,QAAQ;MACXR,YAAY,gBAAGjB,OAAA;QAAQ0B,EAAE,EAAEX,CAAE;QAACY,EAAE,EAAEX,CAAE;QAACY,CAAC,EAAC,GAAG;QAACR,IAAI,EAAER,SAAU;QAACS,MAAM,EAAER,WAAY;QAACC,WAAW,EAAEA;MAAY;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MAC7G;IACF,KAAK,UAAU;MACbR,YAAY,gBAAGjB,OAAA;QAAS6B,MAAM,EAAG,GAAEd,CAAE,IAAGC,CAAC,GAAG,CAAE,IAAGD,CAAC,GAAG,CAAE,IAAGC,CAAC,GAAG,CAAE,IAAGD,CAAC,GAAG,CAAE,IAAGC,CAAC,GAAG,CAAE,EAAE;QAACI,IAAI,EAAER,SAAU;QAACS,MAAM,EAAER,WAAY;QAACC,WAAW,EAAEA;MAAY;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MACvJ;IACF,KAAK,SAAS;MACZR,YAAY,gBAAGjB,OAAA;QAAS6B,MAAM,EAAG,GAAEd,CAAE,IAAGC,CAAC,GAAG,CAAE,IAAGD,CAAC,GAAG,CAAE,IAAGC,CAAE,IAAGD,CAAE,IAAGC,CAAC,GAAG,CAAE,IAAGD,CAAC,GAAG,CAAE,IAAGC,CAAE,EAAE;QAACI,IAAI,EAAER,SAAU;QAACS,MAAM,EAAER,WAAY;QAACC,WAAW,EAAEA;MAAY;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MAC7J;IACF;MACER,YAAY,GAAG,IAAI;EACvB;EAEA,MAAMa,sBAAsB,GAAGrB,cAAc,GAAGsB,IAAI,CAACC,EAAE,GAAG,CAAC;EAC3D,MAAMC,iBAAiB,gBACrBjC,OAAA;IACEkC,EAAE,EAAEnB,CAAE;IACNoB,EAAE,EAAEnB,CAAE;IACNoB,EAAE,EAAErB,CAAC,GAAGgB,IAAI,CAACM,GAAG,CAACP,sBAAsB,CAAC,GAAG,EAAG;IAC9CQ,EAAE,EAAEtB,CAAC,GAAGe,IAAI,CAACQ,GAAG,CAACT,sBAAsB,CAAC,GAAG,EAAG;IAC9CT,MAAM,EAAC,OAAO;IACdP,WAAW,EAAEA;EAAY;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CACF;EAED,MAAMe,kBAAkB,GAAGhC,UAAU,GAAGuB,IAAI,CAACC,EAAE,GAAG,CAAC;EAEnD,MAAMS,aAAa,gBACjBzC,OAAA;IACEkC,EAAE,EAAEnB,CAAE;IACNoB,EAAE,EAAEnB,CAAE;IACNoB,EAAE,EAAErB,CAAC,GAAGgB,IAAI,CAACM,GAAG,CAACG,kBAAkB,CAAC,GAAG,EAAG;IAC1CF,EAAE,EAAEtB,CAAC,GAAGe,IAAI,CAACQ,GAAG,CAACC,kBAAkB,CAAC,GAAG,EAAG;IAC1CnB,MAAM,EAAC,OAAO;IACdP,WAAW,EAAC;EAAG;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CACF;EAED,oBACEzB,OAAA;IAAGU,OAAO,EAAEA,OAAQ;IAAAgC,QAAA,GACjBD,aAAa,EACbR,iBAAiB,EACjBhB,YAAY,EACZN,UAAU,iBAAIX,OAAA;MAAQ0B,EAAE,EAAEX,CAAE;MAACY,EAAE,EAAEX,CAAE;MAACY,CAAC,EAAC,IAAI;MAACR,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,OAAO;MAACP,WAAW,EAAC;IAAG;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxF,CAAC;AAER,CAAC,CAAC;AAACkB,GAAA,GAlFG1C,MAAM;AAoFZ,eAAeA,MAAM;AAAC,IAAAE,EAAA,EAAAwC,GAAA;AAAAC,YAAA,CAAAzC,EAAA;AAAAyC,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}